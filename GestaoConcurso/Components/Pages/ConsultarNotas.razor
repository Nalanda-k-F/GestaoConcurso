@page "/consultarNotas"
@using GestaoConcurso.Models
@using GestaoConcurso.Controllers
@inject PontuacaoController pontuacaoControl
@inject ConcursoDisciplinaController concursoDisciplinaControl
@inject InscricaoController inscricaoControl
@inject ConcursoController concursoControl
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="container mt-4">
    <h3 class="text-center mb-4" style="color: black; font-weight: bold;">Consultar Notas dos Candidatos</h3>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="p-4 border rounded shadow-lg bg-light">
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="mb-3 d-flex align-items-center">
                            <label for="concursoSelect" class="form-label me-2">Concurso:</label>
                            <select id="concursoSelect" class="form-select me-2" @onchange="OnConcursoSelecionado" value="@concursoSelecionadoId">
                                <option value="">Selecione...</option>
                                @if (concursos != null)
                                {
                                    @foreach (var concurso in concursos)
                                    {
                                        <option value="@concurso.Id">@concurso.Edital</option>
                                    }
                                }
                            </select>
                            <button type="button" class="btn " style="background-color: #DC143C;color: white" @onclick="LimparFiltros">Limpar</button>
                        </div>
                    </div>
                </div>

                @if (candidatos != null)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Nome do Candidato</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var candidato in candidatos)
                                        {
                                            <tr>
                                                <td>
                                                    <button type="button" class="btn btn-link" style="text-decoration: none; color: DarkGreen;" @onclick="() => CarregarDisciplinas(candidato.Id)">@candidato.Candidato.Nome</button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }

                @if (disciplinas != null)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Disciplina</th>
                                            <th>Nota</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var disciplina in disciplinas)
                                        {
                                            <tr>
                                                <td>@(disciplina.Disciplina?.NomeDisc ?? "Disciplina não encontrada")</td>
                                                <td>
                                                    @notas.GetValueOrDefault(disciplina.Id, null)
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<Concurso> concursos;
    private int concursoSelecionadoId;
    private List<Inscricao> candidatos;
    private List<ConcursoDisciplina> disciplinas;
    private Dictionary<int, decimal?> notas = new Dictionary<int, decimal?>();
    private int candidatoSelecionadoId;

    protected override async Task OnInitializedAsync()
    {
        concursos = await concursoControl.ListarConcurso();
    }

    private async Task OnConcursoSelecionado(ChangeEventArgs e)
    {
        concursoSelecionadoId = int.Parse(e.Value.ToString());
        await CarregarCandidatos();
    }

    private async Task CarregarCandidatos()
    {
        candidatos = await inscricaoControl.ListarInscricaoPorConcurso(concursoSelecionadoId);
        disciplinas = null;
    }

    private async Task CarregarDisciplinas(int candidatoId)
    {
        candidatoSelecionadoId = candidatoId;
        var inscricao = candidatos.FirstOrDefault(c => c.Id == candidatoSelecionadoId);
        if (inscricao == null) return;
        disciplinas = await concursoDisciplinaControl.ListarConcursoDisciplinasPorConcurso(inscricao.ConcursoId);

        notas.Clear();
        foreach (var disciplina in disciplinas)
        {
            var pontuacaoExistente = await pontuacaoControl.ObterPontuacaoPorInscricaoEConcursoDisciplina(inscricao.Id, disciplina.Id);
            notas[disciplina.Id] = pontuacaoExistente?.Nota;
        }
        StateHasChanged();
    }

    private void LimparFiltros()
    {
        concursoSelecionadoId = 0;
        candidatos = null;
        disciplinas = null;
        NavigationManager.NavigateTo("/consultarNotas", forceLoad: true);
        StateHasChanged();
    }
}